name: publish

on:
  push:
    tags:
      - 'app-v*'

jobs:
  publish-tauri:
    permissions:
      contents: write
    strategy:
      fail-fast: false
      matrix:
        include:
          - runner: macos-14
            target: aarch64-apple-darwin
          - runner: macos-13
            target: x86_64-apple-darwin

    runs-on: ${{ matrix.runner }}

    steps:
      - uses: actions/checkout@v4

      - name: Install Rust (stable) + targets (desktop + wasm)
        uses: dtolnay/rust-toolchain@stable
        with:
          targets: ${{ matrix.target }},wasm32-unknown-unknown

      - name: Rust cache
        uses: swatinem/rust-cache@v2
        with:
          workspaces: './src-tauri -> target'

      - name: Ensure Cargo bin is on PATH
        run: echo "$HOME/.cargo/bin" >> "$GITHUB_PATH"

      - name: Install trunk, wasm-bindgen-cli, and cargo-tauri (v2)
        run: |
          cargo install trunk --locked || true
          cargo install wasm-bindgen-cli --locked || true
          cargo install cargo-tauri --locked --version ^2 || true
          cargo --list | sed -n '/Installed Commands/,$p' | grep -E '^\s+tauri\b' || (echo "cargo tauri not installed" && exit 1)
          cargo tauri --version

      - name: Build Leptos frontend (WASM) with trunk
        # adjust working-directory if your index.html is elsewhere
        working-directory: .
        run: trunk build --release

      - name: Bundle app with Tauri (v2, Rust-only)
        uses: tauri-apps/tauri-action@v0
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          # IMPORTANT: do not include "build" here â€” the action appends it.
          tauriScript: cargo tauri
          args: --target ${{ matrix.target }}
          tagName: app-v__VERSION__
          releaseName: 'App v__VERSION__'
          releaseBody: 'See the assets to download this version and install.'
          releaseDraft: true
          prerelease: false
